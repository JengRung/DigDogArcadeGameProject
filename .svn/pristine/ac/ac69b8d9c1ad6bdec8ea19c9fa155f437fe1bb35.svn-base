import java.awt.Graphics2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;

import javax.imageio.ImageIO;


/**
 * 
 * TODO Put here a description of what this class does.
 *
 * @author Jeng-Rung Tu, Jinhao Sheng
 *         Created May 5, 2018.
 */
public class Hero extends Character{
	
	
	private BufferedImage heroIm;
	private int score;
	private Soda soda;
	
	public Hero(){
		
		super();

		try {
			this.heroIm = ImageIO.read(new File("dig_dug.png"));
		} catch (IOException e) {
			throw new RuntimeException("Error drawing Hero: "+e);
		}
	}


//	the method that draw the hero on Graphics2D
	public void drawCharacter(Graphics2D g2){
		g2 = (Graphics2D) g2.create();
		g2.drawImage(this.heroIm, this.positionX, this.positionY,40, 40, null);		
	}
	

	
	
//	reset hero's position and reduce hero's life by one
	public void dies() {
		this.positionX = 600;
		this.positionY = 440;
		this.heroLife -= 1;
		
		try{
			Thread.sleep(1000);
		}
		catch(InterruptedException e){
		}
	}
	
	public int getX(){
		return this.positionX;
	}
	
	public int getY(){
		return this.positionY;
	}
	
	public void addScore(int score){
		this.score += score;
	}
	public int getScore(){
		return this.score;
	}
	public void drawPump(Graphics2D g2){
		g2 = (Graphics2D) g2.create();
		soda = new Soda(this);
		g2.drawImage(soda.returnSoda(), soda.getX(), soda.getY(), soda.getWidth(), soda.getLength(), null);
		g2.dispose();
	}
public void ways2Kill(Monster1 m) {
		
		if (m.getBox().intersects(soda.getAttackRange())) {
			m.ways2Die();
		}
	}
}
